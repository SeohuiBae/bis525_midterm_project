function [K, L] = LyapunovExponent(data_original, Xmat, tau, mean_period, maxiter)
% d:divergence of nearest trajectoires
% x:signal
% tao:time delay
% m:embedding dimension

N=length(data_original);
M=size(Xmat),2;
for i=1:M
    x0=ones(M,1)*Xmat(:,i);
    distance=sqrt(sum((Xmat-x0).^2,2));
    for j=1:M
        if abs(j-i)<=meanperiod
            distance(j)=1e10;
        end
    end
    [neardis(i) nearpos(i)]=min(distance);
end
d=zeros(1,length(maxiter));
for k=1:maxiter
    maxind=M-k;
    evolve=0;
    pt=0;
    for j=1:M
        if j<=maxind && nearpos(j)<=maxind
            dist_k=sqrt(sum((Xmat(:,j+k)-Xmat(:,nearpos(j)+k)).^2,2));
             if dist_k~=0
                evolve=evolve+log(dist_k);
                pt=pt+1;
             end
        end
    end
    if pt > 0
        d(k)=evolve/pt;
    else
        d(k)=0;
    end
    
end






